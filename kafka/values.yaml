# Default values for kafka.
# This is a YAML-formatted file.
# Declare name/value pairs to be passed into your templates.
# name: value
image: quay.io/samsung_cnct/kafka-petset:0.1
replicas: 3
name: kafka
datadir: /kafka
peer_node: 9092
peer_name: peer
storage_class: anything
storage_size: 20Gi
env_vars:
  - name: KAFKA_ZOOKEEPER_CONNECT
    value: "zk:2181/kafka"
  - name: KAFKA_ADVERTISED_PORT
    value: "9092"
  - name: KAFKA_DELETE_TOPIC_ENABLE
    value: "true"
  - name: KAFKA_CREATE_TOPICS
    value: "kmf-topic:6:2"
kafka_tolerations:
 # - key: taintKey
 #   value: taintValue
 #   operator: Equal
 #   effect: NoSchedule
kafka_scheduling:
  affinity:
    node:
      type: #requiredDuringSchedulingIgnoredDuringExecution
      labels:
      # - key: iamalabelkey
      #   operator: In
      #   values: ["value1", "value2"]

monitor_replicas: 1
kafka_monitor_image: quay.io/samsung_cnct/kafka-monitor:0.1
kafka_monitor_config_path: /opt/kafka-monitor/config
kafka_monitor_gui_port: 8000
kafka_monitor_metrics_port: 8778
kafka_monitor_properties: >-
  '{
    "end-to-end": {
      "class.name": "com.linkedin.kmf.tests.BasicEndToEndTest",
      "topic": "kmf-topic",
      "zookeeper.connect": "zk:2181/kafka",
      "bootstrap.servers": "kafka:9092",
      "produce.record.delay.ms": 100,
      "produce.producer.props": {
        "client.id": "kmf-client-id"
      },

      "consume.latency.sla.ms": "20000"
    },

    "reporter-service": {
      "class.name": "com.linkedin.kmf.services.DefaultMetricsReporterService",
      "report.interval.sec": 1,
      "report.metrics.list": [
        "kmf.services:type=produce-service,name=*:produce-availability-avg",
        "kmf.services:type=consume-service,name=*:consume-availability-avg",
        "kmf.services:type=produce-service,name=*:records-produced-total",
        "kmf.services:type=consume-service,name=*:records-consumed-total",
        "kmf.services:type=consume-service,name=*:records-lost-total",
        "kmf.services:type=consume-service,name=*:records-duplicated-total",
        "kmf.services:type=consume-service,name=*:records-delay-ms-avg",
        "kmf.services:type=produce-service,name=*:produce-error-rate",
        "kmf.services:type=consume-service,name=*:consume-error-rate"
     ]
   },

    "jetty-service": {
      "class.name": "com.linkedin.kmf.services.JettyService",
      "jetty.port": 8000
    },

    "jolokia-service": {
      "class.name": "com.linkedin.kmf.services.JolokiaService"
    }
  }'
kafka_monitor_tolerations:
 # - key: taintKey
 #   value: taintValue
 #   operator: Equal
 #   effect: NoSchedule
kafka_monitor_scheduling:
  affinity:
    node:
      type: #requiredDuringSchedulingIgnoredDuringExecution
      labels:
      # - key: iamalabelkey
      #   operator: In
      #   values: ["value1", "value2"]
kafka_monitor_service_type: LoadBalancer

# Enable persistent volume claims
persistence:
  enabled: true